{% extends 'public/base.html.twig' %}

{% block title %}{{ questionnaire.title }} - Étape {{ currentStep }}{% endblock %}

{% block body %}
<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Progress Header -->
            <div class="card shadow-sm mb-4">
                <div class="card-body py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-1">{{ questionnaire.title }}</h5>
                            <small class="text-muted">{{ response.firstName }} {{ response.lastName }}</small>
                        </div>
                        <div class="text-end">
                            <small class="text-muted">Étape {{ currentStep }} sur {{ totalSteps }}</small>
                            <div class="progress mt-1" style="width: 200px; height: 8px;">
                                <div class="progress-bar bg-primary" 
                                     style="width: {{ (currentStep / totalSteps * 100)|round }}%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Form -->
            <form method="POST" enctype="multipart/form-data" id="questionnaireForm">
                <input type="hidden" name="token" value="{{ csrf_token('questionnaire_step') }}">
                
                <div class="card shadow">
                    <div class="card-body p-4">
                        {% for question in questions %}
                            <div class="question-block mb-5" data-question-id="{{ question.id }}">
                                <!-- Question Header -->
                                <div class="d-flex align-items-start mb-3">
                                    <span class="badge bg-primary me-3 mt-1">{{ loop.index }}</span>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-2">
                                            {{ question.questionText }}
                                            {% if question.isRequired %}
                                                <span class="text-danger">*</span>
                                            {% endif %}
                                        </h6>
                                        {% if question.helpText %}
                                            <small class="text-muted">{{ question.helpText }}</small>
                                        {% endif %}
                                    </div>
                                </div>

                                <!-- Question Input -->
                                <div class="question-input ms-5">
                                    {% set existingResponse = existingResponses[question.id] ?? null %}
                                    {% set existingQuestionResponse = existingQuestionResponses[question.id] ?? null %}
                                    
                                    {% if question.type == 'text' %}
                                        <input type="text" 
                                               class="form-control" 
                                               name="question_{{ question.id }}" 
                                               value="{{ existingResponse ? existingResponse : '' }}"
                                               {% if question.isRequired %}required{% endif %}>
                                    
                                    {% elseif question.type == 'textarea' %}
                                        <textarea class="form-control" 
                                                  rows="4" 
                                                  name="question_{{ question.id }}" 
                                                  {% if question.isRequired %}required{% endif %}>{{ existingResponse ? existingResponse : '' }}</textarea>
                                    
                                    {% elseif question.type == 'number' %}
                                        <input type="number" 
                                               class="form-control" 
                                               name="question_{{ question.id }}" 
                                               value="{{ existingResponse ? existingResponse : '' }}"
                                               {% if question.isRequired %}required{% endif %}>
                                    
                                    {% elseif question.type == 'email' %}
                                        <input type="email" 
                                               class="form-control" 
                                               name="question_{{ question.id }}" 
                                               value="{{ existingResponse ? existingResponse : '' }}"
                                               {% if question.isRequired %}required{% endif %}>
                                    
                                    {% elseif question.type == 'date' %}
                                        <input type="date" 
                                               class="form-control" 
                                               name="question_{{ question.id }}" 
                                               value="{{ existingResponse ? existingResponse : '' }}"
                                               {% if question.isRequired %}required{% endif %}>
                                    
                                    {% elseif question.type == 'single_choice' %}
                                        {% for option in question.options %}
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" 
                                                       type="radio" 
                                                       name="question_{{ question.id }}" 
                                                       value="{{ option.id }}" 
                                                       id="option_{{ option.id }}"
                                                       {% if existingQuestionResponse and existingQuestionResponse.choiceResponse and option.id in existingQuestionResponse.choiceResponse %}checked{% endif %}
                                                       {% if question.isRequired %}required{% endif %}>
                                                <label class="form-check-label" for="option_{{ option.id }}">
                                                    {{ option.optionText }}
                                                </label>
                                            </div>
                                        {% endfor %}
                                    
                                    {% elseif question.type == 'multiple_choice' %}
                                        {% for option in question.options %}
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" 
                                                       type="checkbox" 
                                                       name="question_{{ question.id }}[]" 
                                                       value="{{ option.id }}" 
                                                       id="option_{{ option.id }}"
                                                       {% if existingQuestionResponse and existingQuestionResponse.choiceResponse and option.id in existingQuestionResponse.choiceResponse %}checked{% endif %}>
                                                <label class="form-check-label" for="option_{{ option.id }}">
                                                    {{ option.optionText }}
                                                </label>
                                            </div>
                                        {% endfor %}                                    {% elseif question.type == 'file_upload' %}
                                        <div class="file-upload-container" data-question-id="{{ question.id }}">
                                            <input type="file" 
                                                   class="form-control file-upload-input" 
                                                   data-question-id="{{ question.id }}"
                                                   {% if question.allowedFileTypes %}accept=".{{ question.allowedFileTypes|join(',.') }}"{% else %}accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"{% endif %}
                                                   {% if question.isRequired and not existingQuestionResponse %}required{% endif %}>
                                            
                                            <!-- Hidden input to store uploaded filename -->
                                            <input type="hidden" 
                                                   name="file_{{ question.id }}" 
                                                   value="{% if existingQuestionResponse and existingQuestionResponse.fileResponse %}{{ existingQuestionResponse.fileResponse }}{% endif %}">
                                            
                                            <!-- Upload progress -->
                                            <div class="upload-progress mt-2" style="display: none;">
                                                <div class="progress">
                                                    <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                                         role="progressbar" style="width: 0%"></div>
                                                </div>
                                                <small class="text-muted">Téléchargement en cours...</small>
                                            </div>
                                            
                                            <!-- Upload success/error messages -->
                                            <div class="upload-status mt-2"></div>
                                            
                                            {% if existingQuestionResponse and existingQuestionResponse.fileResponse %}
                                                <div class="mt-2 uploaded-file-info">
                                                    <small class="text-success">
                                                        <i class="fas fa-file-check me-1"></i>
                                                        Fichier téléchargé : {{ existingQuestionResponse.fileResponse|split('_')|slice(1)|join('_') }}
                                                    </small>
                                                </div>
                                            {% endif %}
                                            
                                            <small class="form-text text-muted">
                                                Formats acceptés : {% if question.allowedFileTypes %}{{ question.allowedFileTypesString }}{% else %}PDF, DOC, DOCX, JPG, PNG{% endif %}
                                                {% if question.maxFileSize %} (max {{ question.formattedMaxFileSize }}){% else %} (max 10MB){% endif %}
                                            </small>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>

                <!-- Navigation -->
                <div class="d-flex justify-content-between mt-4">
                    <div>
                        {% if currentStep > 1 %}
                            <a href="{{ path('questionnaire_step', {token: response.token, step: currentStep - 1}) }}" 
                               class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Précédent
                            </a>
                        {% endif %}
                    </div>
                    
                    <div>
                        {% if currentStep < totalSteps %}
                            <button type="submit" name="action" value="next" class="btn btn-primary">
                                Suivant<i class="fas fa-arrow-right ms-2"></i>
                            </button>
                        {% else %}
                            <button type="submit" name="action" value="finish" class="btn btn-success btn-lg">
                                <i class="fas fa-check me-2"></i>Terminer le questionnaire
                            </button>
                        {% endif %}
                    </div>
                </div>

                <!-- Save Draft Button -->
                <div class="text-center mt-3">
                    <button type="submit" name="action" value="save" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-save me-2"></i>Sauvegarder le brouillon
                    </button>
                </div>
            </form>

            <!-- Help Section -->
            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="card bg-light border-0">
                        <div class="card-body py-3">
                            <h6 class="card-title">
                                <i class="fas fa-lightbulb text-warning me-2"></i>
                                Conseils
                            </h6>
                            <ul class="small mb-0">
                                <li>Répondez de manière précise et honnête</li>
                                <li>N'hésitez pas à utiliser les zones de texte pour détailler</li>
                                <li>Vos réponses nous aident à personnaliser votre formation</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card bg-light border-0">
                        <div class="card-body py-3">
                            <h6 class="card-title">
                                <i class="fas fa-question-circle text-info me-2"></i>
                                Besoin d'aide ?
                            </h6>
                            <p class="small mb-0">
                                Si vous avez des questions, contactez-nous à 
                                <a href="mailto:support@eprofos.com">support@eprofos.com</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('questionnaireForm');
    let isSubmitting = false;
    
    // Auto-save functionality
    const autoSave = () => {
        if (isSubmitting) return;
        
        const formData = new FormData(form);
        formData.set('action', 'autosave');
        
        fetch(window.location.href, {
            method: 'POST',
            body: formData
        }).then(response => {
            if (response.ok) {
                console.log('Auto-saved');
            }
        }).catch(error => {
            console.error('Auto-save failed:', error);
        });
    };
    
    // Auto-save every 30 seconds
    setInterval(autoSave, 30000);
    
    // Auto-save on input change (debounced)
    let autoSaveTimeout;
    form.addEventListener('input', function() {
        clearTimeout(autoSaveTimeout);
        autoSaveTimeout = setTimeout(autoSave, 2000);
    });
    
    // Prevent double submission
    form.addEventListener('submit', function() {
        isSubmitting = true;
        const submitButtons = form.querySelectorAll('button[type="submit"]');
        submitButtons.forEach(btn => {
            btn.disabled = true;
            const spinner = document.createElement('span');
            spinner.className = 'spinner-border spinner-border-sm me-2';
            btn.insertBefore(spinner, btn.firstChild);
        });
    });
    
    // File upload handling
    const fileInputs = form.querySelectorAll('.file-upload-input');
    fileInputs.forEach(input => {
        input.addEventListener('change', function() {
            const file = this.files[0];
            const questionId = this.dataset.questionId;
            const container = this.closest('.file-upload-container');
            const progressDiv = container.querySelector('.upload-progress');
            const statusDiv = container.querySelector('.upload-status');
            const hiddenInput = container.querySelector('input[type="hidden"]');
            const progressBar = progressDiv.querySelector('.progress-bar');
            
            if (!file) return;
            
            // File size validation (default 10MB if not specified)
            const maxSize = 10 * 1024 * 1024; // 10MB default
            if (file.size > maxSize) {
                statusDiv.innerHTML = '<small class="text-danger"><i class="fas fa-exclamation-triangle me-1"></i>Le fichier ne doit pas dépasser 10MB</small>';
                this.value = '';
                return;
            }
            
            // Prepare upload
            const formData = new FormData();
            formData.append('file', file);
            formData.append('question_id', questionId);
            formData.append('token', '{{ response.token }}');
            
            // Show progress
            progressDiv.style.display = 'block';
            statusDiv.innerHTML = '';
            progressBar.style.width = '0%';
            
            // Upload file via AJAX
            fetch('{{ path('questionnaire_upload_file') }}', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                progressDiv.style.display = 'none';
                
                if (data.success) {
                    // Store filename in hidden input
                    hiddenInput.value = data.filename;
                    
                    // Show success message
                    statusDiv.innerHTML = `<small class="text-success">
                        <i class="fas fa-file-check me-1"></i>
                        Fichier téléchargé : ${data.originalName}
                    </small>`;
                    
                    // Remove existing uploaded file info if any
                    const existingInfo = container.querySelector('.uploaded-file-info');
                    if (existingInfo) {
                        existingInfo.remove();
                    }
                } else {
                    // Show error message
                    statusDiv.innerHTML = `<small class="text-danger">
                        <i class="fas fa-exclamation-triangle me-1"></i>
                        ${data.message || 'Erreur lors du téléchargement'}
                    </small>`;
                    this.value = '';
                }
            })
            .catch(error => {
                progressDiv.style.display = 'none';
                statusDiv.innerHTML = '<small class="text-danger"><i class="fas fa-exclamation-triangle me-1"></i>Erreur lors du téléchargement</small>';
                this.value = '';
                console.error('Upload error:', error);
            });
            
            // Simulate progress (since we don't have real progress tracking)
            let progress = 0;
            const progressInterval = setInterval(() => {
                progress += Math.random() * 30;
                if (progress > 90) progress = 90;
                progressBar.style.width = progress + '%';
            }, 200);
            
            // Clear progress simulation when done
            setTimeout(() => {
                clearInterval(progressInterval);
                progressBar.style.width = '100%';
            }, 1000);
        });
    });
});
</script>

<style>
.question-block {
    border-left: 3px solid #e9ecef;
    padding-left: 1rem;
    transition: border-color 0.3s ease;
}

.question-block:hover {
    border-left-color: #007bff;
}

.badge {
    font-size: 0.875rem;
    min-width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.form-check-input:checked {
    background-color: #007bff;
    border-color: #007bff;
}

.progress {
    border-radius: 10px;
}

.progress-bar {
    border-radius: 10px;
}

.btn {
    transition: all 0.2s ease;
}

.btn:hover {
    transform: translateY(-1px);
}
</style>
{% endblock %}
