{% extends 'admin/base.html.twig' %}

{% block title %}{{ reportConfig.title }} - Résultats{% endblock %}

{% block body %}
<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">{{ reportConfig.title }}</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="{{ path('admin_enrollment_reports_index') }}">Rapports</a></li>
                    <li class="breadcrumb-item"><a href="{{ path('admin_enrollment_reports_custom') }}">Rapport Personnalisé</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Résultats</li>
                </ol>
            </nav>
        </div>
        <div class="btn-group">
            <a href="{{ path('admin_enrollment_reports_custom') }}" class="btn btn-outline-secondary">
                <i class="fas fa-edit"></i> Modifier le rapport
            </a>
            <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <i class="fas fa-download"></i> Exporter
            </button>
            <ul class="dropdown-menu">
                <li><button class="dropdown-item" onclick="exportReport('csv')">
                    <i class="fas fa-file-csv"></i> Format CSV
                </button></li>
                <li><button class="dropdown-item" onclick="exportReport('excel')">
                    <i class="fas fa-file-excel"></i> Format Excel
                </button></li>
                <li><button class="dropdown-item" onclick="printReport()">
                    <i class="fas fa-print"></i> Imprimer
                </button></li>
            </ul>
        </div>
    </div>

    <!-- Report Summary -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h4 class="mb-0">{{ reportData.summary.total_records }}</h4>
                            <p class="mb-0">Résultats trouvés</p>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-chart-bar fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h4 class="mb-0">{{ reportConfig.fields|length }}</h4>
                            <p class="mb-0">Colonnes affichées</p>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-columns fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h4 class="mb-0">{{ reportData.summary.generated_at|date('H:i') }}</h4>
                            <p class="mb-0">Heure de génération</p>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-clock fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <h4 class="mb-0">{{ reportData.summary.generated_at|date('d/m') }}</h4>
                            <p class="mb-0">Date du rapport</p>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-calendar fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Applied Filters -->
    {% set hasFilters = false %}
    {% for key, value in reportConfig.filters %}
        {% if value and value != '' %}
            {% set hasFilters = true %}
        {% endif %}
    {% endfor %}

    {% if hasFilters %}
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="fas fa-filter"></i> Filtres appliqués
                </h6>
            </div>
            <div class="card-body">
                <div class="row g-2">
                    {% if reportConfig.filters.formation %}
                        <div class="col-auto">
                            <span class="badge bg-primary">
                                <i class="fas fa-book"></i> 
                                Formation: 
                                {% for formation in formations %}
                                    {% if formation.id == reportConfig.filters.formation %}
                                        {{ formation.title|slice(0, 30) }}{% if formation.title|length > 30 %}...{% endif %}
                                    {% endif %}
                                {% endfor %}
                            </span>
                        </div>
                    {% endif %}
                    {% if reportConfig.filters.status %}
                        <div class="col-auto">
                            <span class="badge bg-info">
                                <i class="fas fa-flag"></i> 
                                Statut: {{ constant('App\\Entity\\Core\\StudentEnrollment::STATUSES')[reportConfig.filters.status] }}
                            </span>
                        </div>
                    {% endif %}
                    {% if reportConfig.filters.start_date %}
                        <div class="col-auto">
                            <span class="badge bg-success">
                                <i class="fas fa-calendar-alt"></i> 
                                Depuis: {{ reportConfig.filters.start_date|date('d/m/Y') }}
                            </span>
                        </div>
                    {% endif %}
                    {% if reportConfig.filters.end_date %}
                        <div class="col-auto">
                            <span class="badge bg-warning">
                                <i class="fas fa-calendar-check"></i> 
                                Jusqu'au: {{ reportConfig.filters.end_date|date('d/m/Y') }}
                            </span>
                        </div>
                    {% endif %}
                    {% if reportConfig.filters.enrollment_source %}
                        <div class="col-auto">
                            <span class="badge bg-secondary">
                                <i class="fas fa-source"></i> 
                                Source: {{ reportConfig.filters.enrollment_source|title }}
                            </span>
                        </div>
                    {% endif %}
                    {% if reportConfig.filters.progress %}
                        <div class="col-auto">
                            <span class="badge bg-dark">
                                <i class="fas fa-chart-line"></i> 
                                Progression: 
                                {% if reportConfig.filters.progress == 'not_started' %}Non démarrée
                                {% elseif reportConfig.filters.progress == 'low' %}Faible
                                {% elseif reportConfig.filters.progress == 'medium' %}Moyenne
                                {% elseif reportConfig.filters.progress == 'high' %}Élevée
                                {% elseif reportConfig.filters.progress == 'completed' %}Terminée
                                {% elseif reportConfig.filters.progress == 'at_risk' %}À risque
                                {% endif %}
                            </span>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    {% endif %}

    <!-- Results Table -->
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-table"></i> Données du rapport
                    {% if reportConfig.groupBy %}
                        <small class="text-muted">
                            - Groupé par 
                            {% if reportConfig.groupBy == 'formation' %}Formation
                            {% elseif reportConfig.groupBy == 'status' %}Statut
                            {% elseif reportConfig.groupBy == 'enrollment_month' %}Mois d'inscription
                            {% elseif reportConfig.groupBy == 'enrollment_source' %}Source d'inscription
                            {% elseif reportConfig.groupBy == 'progress_level' %}Niveau de progression
                            {% endif %}
                        </small>
                    {% endif %}
                </h5>
                <div class="btn-group btn-group-sm">
                    <button class="btn btn-outline-primary" onclick="toggleTableView('compact')" id="compactViewBtn">
                        <i class="fas fa-compress"></i> Vue compacte
                    </button>
                    <button class="btn btn-outline-primary" onclick="toggleTableView('detailed')" id="detailedViewBtn">
                        <i class="fas fa-expand"></i> Vue détaillée
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            {% if reportData.data|length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="reportTable">
                        <thead class="table-light">
                            <tr>
                                {% for field in reportConfig.fields %}
                                    <th>
                                        {% if field == 'student_name' %}Nom de l'étudiant
                                        {% elseif field == 'student_email' %}Email
                                        {% elseif field == 'formation_title' %}Formation
                                        {% elseif field == 'session_name' %}Session
                                        {% elseif field == 'enrollment_status' %}Statut
                                        {% elseif field == 'enrolled_at' %}Date d'inscription
                                        {% elseif field == 'completed_at' %}Date de completion
                                        {% elseif field == 'progress_percentage' %}Progression
                                        {% elseif field == 'dropout_reason' %}Raison d'abandon
                                        {% elseif field == 'enrollment_source' %}Source
                                        {% else %}{{ field|title }}
                                        {% endif %}
                                    </th>
                                {% endfor %}
                                <th class="text-center" style="width: 80px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for enrollment in reportData.data %}
                                <tr>
                                    {% for field in reportConfig.fields %}
                                        <td>
                                            {% if field == 'student_name' %}
                                                <div class="d-flex align-items-center">
                                                    <div>
                                                        <div class="fw-medium">{{ enrollment.student.fullName }}</div>
                                                        <small class="text-muted detailed-view">{{ enrollment.student.email }}</small>
                                                    </div>
                                                </div>
                                            {% elseif field == 'student_email' %}
                                                <a href="mailto:{{ enrollment.student.email }}" class="text-decoration-none">
                                                    {{ enrollment.student.email }}
                                                </a>
                                            {% elseif field == 'formation_title' %}
                                                <div>
                                                    <div class="fw-medium">{{ enrollment.sessionRegistration.session.formation.title }}</div>
                                                    <small class="text-muted detailed-view">{{ enrollment.sessionRegistration.session.formation.category.name }}</small>
                                                </div>
                                            {% elseif field == 'session_name' %}
                                                <div>
                                                    <div>{{ enrollment.sessionRegistration.session.name }}</div>
                                                    <small class="text-muted detailed-view">
                                                        {{ enrollment.sessionRegistration.session.startDate|date('d/m/Y') }} - 
                                                        {{ enrollment.sessionRegistration.session.endDate|date('d/m/Y') }}
                                                    </small>
                                                </div>
                                            {% elseif field == 'enrollment_status' %}
                                                <span class="badge {{ enrollment.status == constant('App\\Entity\\Core\\StudentEnrollment::STATUS_COMPLETED') ? 'bg-success' : 
                                                                      (enrollment.status == constant('App\\Entity\\Core\\StudentEnrollment::STATUS_ENROLLED') ? 'bg-primary' : 
                                                                      (enrollment.status == constant('App\\Entity\\Core\\StudentEnrollment::STATUS_DROPPED_OUT') ? 'bg-danger' : 'bg-warning')) }}">
                                                    {{ constant('App\\Entity\\Core\\StudentEnrollment::STATUSES')[enrollment.status] }}
                                                </span>
                                            {% elseif field == 'enrolled_at' %}
                                                <div>
                                                    <div>{{ enrollment.enrolledAt|date('d/m/Y') }}</div>
                                                    <small class="text-muted detailed-view">{{ enrollment.enrolledAt|date('H:i') }}</small>
                                                </div>
                                            {% elseif field == 'completed_at' %}
                                                {% if enrollment.completedAt %}
                                                    <div class="text-success">
                                                        <div>{{ enrollment.completedAt|date('d/m/Y') }}</div>
                                                        <small class="text-muted detailed-view">{{ enrollment.completedAt|date('H:i') }}</small>
                                                    </div>
                                                {% else %}
                                                    <span class="text-muted">-</span>
                                                {% endif %}
                                            {% elseif field == 'progress_percentage' %}
                                                {% if enrollment.progress %}
                                                    <div class="d-flex align-items-center">
                                                        <div class="progress me-2" style="width: 60px;">
                                                            <div class="progress-bar" role="progressbar" 
                                                                 style="width: {{ enrollment.progress.completionPercentage }}%" 
                                                                 aria-valuenow="{{ enrollment.progress.completionPercentage }}" 
                                                                 aria-valuemin="0" aria-valuemax="100">
                                                            </div>
                                                        </div>
                                                        <small>{{ enrollment.progress.completionPercentage }}%</small>
                                                    </div>
                                                {% else %}
                                                    <span class="text-muted">0%</span>
                                                {% endif %}
                                            {% elseif field == 'dropout_reason' %}
                                                {% if enrollment.dropoutReason %}
                                                    <span class="text-danger">{{ enrollment.dropoutReason }}</span>
                                                {% else %}
                                                    <span class="text-muted">-</span>
                                                {% endif %}
                                            {% elseif field == 'enrollment_source' %}
                                                <span class="badge bg-secondary">
                                                    {% if enrollment.enrollmentSource == 'web' %}Site web
                                                    {% elseif enrollment.enrollmentSource == 'phone' %}Téléphone
                                                    {% elseif enrollment.enrollmentSource == 'email' %}Email
                                                    {% elseif enrollment.enrollmentSource == 'direct' %}Direct
                                                    {% elseif enrollment.enrollmentSource == 'partner' %}Partenaire
                                                    {% else %}{{ enrollment.enrollmentSource|default('Non spécifiée') }}
                                                    {% endif %}
                                                </span>
                                            {% endif %}
                                        </td>
                                    {% endfor %}
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm">
                                            <a href="{{ path('admin_student_enrollment_show', {id: enrollment.id}) }}" 
                                               class="btn btn-outline-primary btn-sm" title="Voir les détails">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            {% else %}
                <div class="text-center py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Aucun résultat trouvé</h5>
                    <p class="text-muted">Votre rapport personnalisé n'a retourné aucune donnée correspondant aux critères sélectionnés.</p>
                    <a href="{{ path('admin_enrollment_reports_custom') }}" class="btn btn-primary">
                        <i class="fas fa-edit"></i> Modifier les critères
                    </a>
                </div>
            {% endif %}
        </div>
        {% if reportData.data|length > 0 %}
            <div class="card-footer">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="text-muted">
                        Affichage de {{ reportData.data|length }} résultat{{ reportData.data|length > 1 ? 's' : '' }}
                        {% if reportConfig.groupBy %}
                            groupé{{ reportData.data|length > 1 ? 's' : '' }} par {{ reportConfig.groupBy }}
                        {% endif %}
                    </div>
                    <div class="btn-group btn-group-sm">
                        <button class="btn btn-outline-primary" onclick="selectAllRows()">
                            <i class="fas fa-check-square"></i> Tout sélectionner
                        </button>
                        <button class="btn btn-outline-secondary" onclick="exportSelected()">
                            <i class="fas fa-download"></i> Exporter la sélection
                        </button>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>
</div>

<!-- Export Modal -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">
                    <i class="fas fa-download"></i> Exporter le rapport
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="exportForm">
                    <div class="mb-3">
                        <label for="exportFormat" class="form-label">Format d'export</label>
                        <select class="form-select" id="exportFormat" name="format">
                            <option value="csv">CSV (Comma Separated Values)</option>
                            <option value="excel">Excel (XLSX)</option>
                            <option value="pdf">PDF (Portable Document Format)</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="exportFilename" class="form-label">Nom du fichier</label>
                        <input type="text" class="form-control" id="exportFilename" name="filename" 
                               value="{{ reportConfig.title|lower|replace({' ': '_', 'é': 'e', 'è': 'e', 'à': 'a', 'ç': 'c', 'ù': 'u'}) }}_{{ 'now'|date('Y-m-d') }}">
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="includeFilters" name="include_filters" checked>
                        <label class="form-check-label" for="includeFilters">
                            Inclure les informations de filtrage dans l'export
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" onclick="processExport()">
                    <i class="fas fa-download"></i> Télécharger
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Table view toggle
    window.toggleTableView = function(view) {
        const table = document.getElementById('reportTable');
        const detailedElements = table.querySelectorAll('.detailed-view');
        const compactBtn = document.getElementById('compactViewBtn');
        const detailedBtn = document.getElementById('detailedViewBtn');

        if (view === 'compact') {
            detailedElements.forEach(el => el.style.display = 'none');
            compactBtn.classList.add('active');
            detailedBtn.classList.remove('active');
            localStorage.setItem('reportTableView', 'compact');
        } else {
            detailedElements.forEach(el => el.style.display = '');
            detailedBtn.classList.add('active');
            compactBtn.classList.remove('active');
            localStorage.setItem('reportTableView', 'detailed');
        }
    };

    // Load saved view preference
    const savedView = localStorage.getItem('reportTableView') || 'detailed';
    toggleTableView(savedView);

    // Export functions
    window.exportReport = function(format) {
        const modal = new bootstrap.Modal(document.getElementById('exportModal'));
        document.getElementById('exportFormat').value = format;
        modal.show();
    };

    window.processExport = function() {
        const form = document.getElementById('exportForm');
        const formData = new FormData(form);
        
        // Add report config to export
        const reportConfig = {{ reportConfig|json_encode|raw }};
        formData.append('report_config', JSON.stringify(reportConfig));
        
        // Create hidden form and submit
        const exportForm = document.createElement('form');
        exportForm.method = 'POST';
        exportForm.action = '{{ path('admin_enrollment_reports_export') }}';
        
        for (let [key, value] of formData.entries()) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = key;
            input.value = value;
            exportForm.appendChild(input);
        }
        
        document.body.appendChild(exportForm);
        exportForm.submit();
        document.body.removeChild(exportForm);
        
        // Close modal
        bootstrap.Modal.getInstance(document.getElementById('exportModal')).hide();
    };

    // Print function
    window.printReport = function() {
        const printWindow = window.open('', '_blank');
        const reportHtml = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>{{ reportConfig.title }}</title>
                <style>
                    body { font-family: Arial, sans-serif; font-size: 12px; }
                    table { width: 100%; border-collapse: collapse; margin-top: 20px; }
                    th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
                    th { background-color: #f2f2f2; font-weight: bold; }
                    .header { text-align: center; margin-bottom: 20px; }
                    .badge { padding: 2px 6px; border-radius: 3px; font-size: 10px; }
                    .bg-success { background-color: #28a745; color: white; }
                    .bg-primary { background-color: #007bff; color: white; }
                    .bg-danger { background-color: #dc3545; color: white; }
                    .bg-warning { background-color: #ffc107; color: black; }
                    .text-muted { color: #6c757d; }
                    @media print { .no-print { display: none; } }
                </style>
            </head>
            <body>
                <div class="header">
                    <h1>{{ reportConfig.title }}</h1>
                    <p>Généré le {{ reportData.summary.generated_at|date('d/m/Y à H:i') }}</p>
                    <p>{{ reportData.summary.total_records }} résultat(s) trouvé(s)</p>
                </div>
                ${document.querySelector('#reportTable').outerHTML}
                <p style="margin-top: 20px; font-size: 10px; color: #6c757d;">
                    Rapport généré par EPROFOS - Système de gestion de formation
                </p>
            </body>
            </html>
        `;
        
        printWindow.document.write(reportHtml);
        printWindow.document.close();
        printWindow.print();
    };

    // Row selection
    window.selectAllRows = function() {
        const checkboxes = document.querySelectorAll('tbody input[type="checkbox"]');
        const allChecked = Array.from(checkboxes).every(cb => cb.checked);
        
        checkboxes.forEach(cb => {
            cb.checked = !allChecked;
        });
        
        event.target.innerHTML = allChecked ? 
            '<i class="fas fa-check-square"></i> Tout sélectionner' : 
            '<i class="fas fa-square"></i> Tout désélectionner';
    };

    window.exportSelected = function() {
        const selectedRows = document.querySelectorAll('tbody input[type="checkbox"]:checked');
        if (selectedRows.length === 0) {
            alert('Veuillez sélectionner au moins une ligne à exporter.');
            return;
        }
        
        // Implement selected rows export logic
        exportReport('csv');
    };

    // Auto-refresh functionality (optional)
    let refreshInterval;
    const startAutoRefresh = function(minutes = 5) {
        refreshInterval = setInterval(() => {
            if (confirm('Souhaitez-vous actualiser les données du rapport ?')) {
                location.reload();
            }
        }, minutes * 60 * 1000);
    };

    // Start auto-refresh if enabled
    // startAutoRefresh();

    // Cleanup on page unload
    window.addEventListener('beforeunload', function() {
        if (refreshInterval) {
            clearInterval(refreshInterval);
        }
    });

    // Table sorting (basic implementation)
    const thElements = document.querySelectorAll('#reportTable th');
    thElements.forEach((th, index) => {
        if (index < thElements.length - 1) { // Skip actions column
            th.style.cursor = 'pointer';
            th.addEventListener('click', () => sortTable(index));
        }
    });

    function sortTable(columnIndex) {
        const table = document.getElementById('reportTable');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        
        const isNumeric = (str) => !isNaN(str) && !isNaN(parseFloat(str));
        const isDate = (str) => !isNaN(Date.parse(str));
        
        rows.sort((a, b) => {
            const aText = a.children[columnIndex].textContent.trim();
            const bText = b.children[columnIndex].textContent.trim();
            
            if (isNumeric(aText) && isNumeric(bText)) {
                return parseFloat(aText) - parseFloat(bText);
            } else if (isDate(aText) && isDate(bText)) {
                return new Date(aText) - new Date(bText);
            } else {
                return aText.localeCompare(bText);
            }
        });
        
        rows.forEach(row => tbody.appendChild(row));
    }
});
</script>
{% endblock %}
