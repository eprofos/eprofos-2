{% extends 'admin/base.html.twig' %}

{% set page_title = 'Gestion des formateurs' %}

{% block title %}{{ page_title }}{% endblock %}

{% block page_actions %}
    <div class="btn-list">
        <a href="{{ path('admin_teacher_export') }}" class="btn btn-outline-secondary">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M14 3v4a1 1 0 0 0 1 1h4"/>
                <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"/>
                <path d="M9 9l1 0"/>
                <path d="M9 13l6 0"/>
                <path d="M9 17l6 0"/>
            </svg>
            Exporter CSV
        </a>
        <a href="{{ path('admin_teacher_new') }}" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M12 5l0 14"/>
                <path d="M5 12l14 0"/>
            </svg>
            Nouveau formateur
        </a>
    </div>
{% endblock %}

{% block body %}
    <!-- Statistics Cards -->
    <div class="row row-deck row-cards mb-3">
        <div class="col-sm-6 col-lg-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="subheader">Total</div>
                        <div class="ms-auto lh-1">
                            <div class="dropdown">
                                <a class="dropdown-toggle text-muted" href="#" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dernier mois</a>
                                <div class="dropdown-menu dropdown-menu-end">
                                    <a class="dropdown-item active" href="#">Dernier mois</a>
                                    <a class="dropdown-item" href="#">Derniers 3 mois</a>
                                    <a class="dropdown-item" href="#">Dernière année</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="h1 mb-3">{{ statistics.total ?? 0 }}</div>
                    <div class="d-flex mb-2">
                        <div>Formateurs inscrits</div>
                        <div class="ms-auto">
                            <span class="text-green d-inline-flex align-items-center lh-1">
                                +{{ (statistics.total ?? 0) }}
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon ms-1" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 17l6 -6l4 4l8 -8"/><path d="M14 7l7 0l0 7"/></svg>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="subheader">Actifs</div>
                    </div>
                    <div class="h1 mb-3">{{ statistics.active ?? 0 }}</div>
                    <div class="d-flex mb-2">
                        <div>Formateurs actifs</div>
                        <div class="ms-auto">
                            <span class="text-green d-inline-flex align-items-center lh-1">
                                {{ statistics.total > 0 ? ((statistics.active / statistics.total) * 100)|round(1) : 0 }}%
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="subheader">Vérifiés</div>
                    </div>
                    <div class="h1 mb-3">{{ statistics.verified ?? 0 }}</div>
                    <div class="d-flex mb-2">
                        <div>Emails vérifiés</div>
                        <div class="ms-auto">
                            <span class="text-blue d-inline-flex align-items-center lh-1">
                                {{ statistics.total > 0 ? ((statistics.verified / statistics.total) * 100)|round(1) : 0 }}%
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="subheader">Non vérifiés</div>
                    </div>
                    <div class="h1 mb-3">{{ (statistics.total ?? 0) - (statistics.verified ?? 0) }}</div>
                    <div class="d-flex mb-2">
                        <div>Nécessitent attention</div>
                        <div class="ms-auto">
                            {% set unverified_percent = statistics.total > 0 ? (((statistics.total - statistics.verified) / statistics.total) * 100)|round(1) : 0 %}
                            <span class="{{ unverified_percent > 20 ? 'text-red' : 'text-yellow' }} d-inline-flex align-items-center lh-1">
                                {{ unverified_percent }}%
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
        <div class="card-header">
            <h3 class="card-title">Filtres</h3>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ path('admin_teacher_index') }}">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label">Recherche</label>
                            <input type="text" name="search" class="form-control" placeholder="Nom, email, spécialité..." value="{{ filters.search }}">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Statut</label>
                            <select name="status" class="form-select">
                                <option value="">Tous</option>
                                <option value="active" {{ filters.status == 'active' ? 'selected' : '' }}>Actifs</option>
                                <option value="inactive" {{ filters.status == 'inactive' ? 'selected' : '' }}>Inactifs</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Email vérifié</label>
                            <select name="email_verified" class="form-select">
                                <option value="">Tous</option>
                                <option value="verified" {{ filters.email_verified == 'verified' ? 'selected' : '' }}>Vérifiés</option>
                                <option value="unverified" {{ filters.email_verified == 'unverified' ? 'selected' : '' }}>Non vérifiés</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Spécialité</label>
                            <select name="specialty" class="form-select">
                                <option value="">Toutes</option>
                                {% for specialty in specialties %}
                                    <option value="{{ specialty.specialty }}" {{ filters.specialty == specialty.specialty ? 'selected' : '' }}>
                                        {{ specialty.specialty }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Expérience min.</label>
                            <select name="min_experience" class="form-select">
                                <option value="">Toutes</option>
                                <option value="1" {{ filters.min_experience == '1' ? 'selected' : '' }}>1+ an</option>
                                <option value="3" {{ filters.min_experience == '3' ? 'selected' : '' }}>3+ ans</option>
                                <option value="5" {{ filters.min_experience == '5' ? 'selected' : '' }}>5+ ans</option>
                                <option value="10" {{ filters.min_experience == '10' ? 'selected' : '' }}>10+ ans</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <label class="form-label">&nbsp;</label>
                            <button type="submit" class="btn btn-primary w-100">Filtrer</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Teachers Table -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">
                Formateurs ({{ total_teachers }})
            </h3>
        </div>

        {% if teachers is not empty %}
            <form id="bulk-action-form" method="POST" action="{{ path('admin_teacher_bulk_action') }}">
                <div class="card-body border-bottom py-3">
                    <div class="d-flex">
                        <div class="text-muted">
                            Actions groupées:
                            <div class="btn-group ms-2" role="group">
                                <button type="submit" name="action" value="activate" class="btn btn-sm btn-outline-success" onclick="return confirmBulkAction('activer')">
                                    Activer
                                </button>
                                <button type="submit" name="action" value="deactivate" class="btn btn-sm btn-outline-secondary" onclick="return confirmBulkAction('désactiver')">
                                    Désactiver
                                </button>
                                <button type="submit" name="action" value="verify_email" class="btn btn-sm btn-outline-info" onclick="return confirmBulkAction('vérifier l\\'email de')">
                                    Vérifier email
                                </button>
                                <button type="submit" name="action" value="send_password_reset" class="btn btn-sm btn-outline-warning" onclick="return confirmBulkAction('envoyer un reset password à')">
                                    Reset password
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="table-responsive">
                    <table class="table table-vcenter card-table">
                        <thead>
                            <tr>
                                <th class="w-1">
                                    <input class="form-check-input m-0 align-middle" type="checkbox" id="select-all">
                                </th>
                                <th>Formateur</th>
                                <th>Spécialité</th>
                                <th>Expérience</th>
                                <th>Statut</th>
                                <th>Email</th>
                                <th>Inscription</th>
                                <th class="w-1"></th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for teacher in teachers %}
                                <tr>
                                    <td>
                                        <input class="form-check-input m-0 align-middle" type="checkbox" name="teacher_ids[]" value="{{ teacher.id }}">
                                    </td>
                                    <td>
                                        <div class="d-flex py-1 align-items-center">
                                            <span class="avatar avatar-sm me-2" style="background-image: url({{ asset('images/default-avatar.svg') }})">
                                                {{ teacher.initials }}
                                            </span>
                                            <div class="flex-fill">
                                                <div class="font-weight-medium">{{ teacher.displayName }}</div>
                                                <div class="text-muted"><a href="mailto:{{ teacher.email }}" class="text-reset">{{ teacher.email }}</a></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        {% if teacher.specialty %}
                                            <span class="badge bg-azure text-azure-fg">{{ teacher.specialty }}</span>
                                        {% else %}
                                            <span class="text-muted">Non renseignée</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        {{ teacher.experienceDescription }}
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            {% if teacher.isActive %}
                                                <span class="badge bg-success me-1">Actif</span>
                                            {% else %}
                                                <span class="badge bg-secondary me-1">Inactif</span>
                                            {% endif %}
                                            {% if teacher.emailVerified %}
                                                <small class="text-success">✓ Email vérifié</small>
                                            {% else %}
                                                <small class="text-warning">⚠ Email non vérifié</small>
                                            {% endif %}
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-muted">
                                            {% if teacher.emailVerified %}
                                                <span class="text-success">✓</span>
                                            {% else %}
                                                <span class="text-warning">⚠</span>
                                            {% endif %}
                                            {{ teacher.email }}
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-muted">{{ teacher.createdAt|date('d/m/Y') }}</div>
                                        {% if teacher.lastLoginAt %}
                                            <small class="text-muted">Dernière connexion: {{ teacher.lastLoginAt|date('d/m/Y H:i') }}</small>
                                        {% else %}
                                            <small class="text-muted">Jamais connecté</small>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <div class="btn-list flex-nowrap">
                                            <a href="{{ path('admin_teacher_show', {id: teacher.id}) }}" class="btn btn-white btn-sm">
                                                Voir
                                            </a>
                                            <div class="dropdown">
                                                <button class="btn btn-white btn-sm dropdown-toggle align-text-top" data-bs-toggle="dropdown">
                                                    Actions
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-end">
                                                    <a class="dropdown-item" href="{{ path('admin_teacher_edit', {id: teacher.id}) }}">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1"/><path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z"/><path d="M16 5l3 3"/></svg>
                                                        Modifier
                                                    </a>
                                                    {% if not teacher.emailVerified %}
                                                        <button class="dropdown-item" onclick="verifyEmail({{ teacher.id }}, '{{ csrf_token('verify_email' ~ teacher.id) }}')">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 12l2 2l4 -4"/><path d="M21 12c.552 0 1.005 -.449 .95 -.998a10 10 0 1 0 -8.953 8.953c.55 -.055 .998 -.398 .998 -.95h-.02c0 -.591 -.448 -1.068 -1.022 -1.022a8 8 0 1 1 7.072 -7.972c-.46 .045 -1.025 .43 -1.025 1z"/></svg>
                                                            Vérifier email manuellement
                                                        </button>
                                                        <button class="dropdown-item" onclick="sendEmailVerification({{ teacher.id }}, '{{ csrf_token('send_email_verification' ~ teacher.id) }}')">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z"/><path d="M3 7l9 6l9 -6"/></svg>
                                                            Envoyer lien de vérification
                                                        </button>
                                                    {% endif %}
                                                    <button class="dropdown-item" onclick="sendPasswordReset({{ teacher.id }})">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z"/><path d="M3 7l9 6l9 -6"/></svg>
                                                        Reset password
                                                    </button>
                                                    <button class="dropdown-item" onclick="generatePassword({{ teacher.id }}, '{{ csrf_token('generate_password' ~ teacher.id) }}')">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 12l-3 -3l3 -3"/><path d="M6 9h14.5"/><path d="M15 12l3 3l-3 3"/><path d="M18 15h-14.5"/></svg>
                                                        Générer mot de passe
                                                    </button>
                                                    <button class="dropdown-item" onclick="toggleStatus({{ teacher.id }}, {{ teacher.isActive ? 'false' : 'true' }})">
                                                        {% if teacher.isActive %}
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"/><path d="M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6"/></svg>
                                                            Désactiver
                                                        {% else %}
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"/><path d="M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6"/></svg>
                                                            Activer
                                                        {% endif %}
                                                    </button>
                                                    <div class="dropdown-divider"></div>
                                                    <form method="post" action="{{ path('admin_teacher_delete', {id: teacher.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce formateur ?')" class="d-inline">
                                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ teacher.id) }}">
                                                        <button class="dropdown-item text-danger">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon dropdown-item-icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 7l16 0"/><path d="M10 11l0 6"/><path d="M14 11l0 6"/><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"/><path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"/></svg>
                                                            Supprimer
                                                        </button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </form>
        {% else %}
            <div class="card-body">
                <div class="empty">
                    <div class="empty-img"><img src="{{ asset('images/undraw_empty.svg') }}" height="128" alt="" /></div>
                    <p class="empty-title">Aucun formateur trouvé</p>
                    <p class="empty-subtitle text-muted">
                        Essayez d'ajuster vos filtres ou ajoutez un nouveau formateur.
                    </p>
                    <div class="empty-action">
                        <a href="{{ path('admin_teacher_new') }}" class="btn btn-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <path d="M12 5l0 14"/>
                                <path d="M5 12l14 0"/>
                            </svg>
                            Ajouter un formateur
                        </a>
                    </div>
                </div>
            </div>
        {% endif %}

        <!-- Pagination -->
        {% if total_pages > 1 %}
            <div class="card-footer d-flex align-items-center">
                <p class="m-0 text-muted">
                    Affichage de <span>{{ ((current_page - 1) * 20) + 1 }}</span> à <span>{{ ((current_page - 1) * 20) + teachers|length }}</span> sur <span>{{ total_teachers }}</span> résultats
                </p>
                <ul class="pagination m-0 ms-auto">
                    {% if current_page > 1 %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('admin_teacher_index', filters|merge({page: current_page - 1})) }}">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6"/></svg>
                                prev
                            </a>
                        </li>
                    {% endif %}

                    {% for page in range(max(1, current_page - 2), min(total_pages, current_page + 2)) %}
                        <li class="page-item {{ page == current_page ? 'active' : '' }}">
                            <a class="page-link" href="{{ path('admin_teacher_index', filters|merge({page: page})) }}">{{ page }}</a>
                        </li>
                    {% endfor %}

                    {% if current_page < total_pages %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('admin_teacher_index', filters|merge({page: current_page + 1})) }}">
                                next
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6"/></svg>
                            </a>
                        </li>
                    {% endif %}
                </ul>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        // Select all checkbox functionality
        document.getElementById('select-all').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('input[name="teacher_ids[]"]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
        });

        // Bulk action confirmation
        function confirmBulkAction(action) {
            const selected = document.querySelectorAll('input[name="teacher_ids[]"]:checked');
            if (selected.length === 0) {
                alert('Veuillez sélectionner au moins un formateur.');
                return false;
            }
            return confirm(`Êtes-vous sûr de vouloir ${action} ${selected.length} formateur(s) ?`);
        }

        // AJAX functions for individual actions
        async function sendPasswordReset(teacherId) {
            if (!confirm('Envoyer un email de réinitialisation de mot de passe ?')) return;
            
            try {
                const response = await fetch(`/admin/teachers/${teacherId}/reset-password`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                const data = await response.json();
                
                if (data.success) {
                    alert(data.message);
                } else {
                    alert('Erreur: ' + data.message);
                }
            } catch (error) {
                alert('Erreur de connexion');
            }
        }

        async function verifyEmail(teacherId, token) {
            if (!confirm('Marquer cet email comme vérifié ?')) return;
            
            try {
                const response = await fetch(`/admin/teachers/${teacherId}/verify-email`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `_token=${token}`
                });
                const data = await response.json();
                
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert('Erreur: ' + data.message);
                }
            } catch (error) {
                alert('Erreur de connexion');
            }
        }

        async function sendEmailVerification(teacherId, csrfToken) {
            if (!confirm('Envoyer un email de vérification à ce formateur ?')) return;
            
            try {
                const response = await fetch(`/admin/teachers/${teacherId}/send-email-verification`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `_token=${csrfToken}`
                });
                const data = await response.json();
                
                if (data.success) {
                    alert(data.message);
                } else {
                    alert('Erreur: ' + data.message);
                }
            } catch (error) {
                alert('Erreur de connexion');
            }
        }

        async function generatePassword(teacherId, token) {
            if (!confirm('Générer un nouveau mot de passe temporaire ?')) return;
            
            try {
                const response = await fetch(`/admin/teachers/${teacherId}/generate-password`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `_token=${token}`
                });
                const data = await response.json();
                
                if (data.success) {
                    alert(`${data.message}\nMot de passe temporaire: ${data.password}`);
                } else {
                    alert('Erreur: ' + data.message);
                }
            } catch (error) {
                alert('Erreur de connexion');
            }
        }

        async function toggleStatus(teacherId, activate) {
            const action = activate ? 'activer' : 'désactiver';
            if (!confirm(`${action.charAt(0).toUpperCase() + action.slice(1)} ce formateur ?`)) return;
            
            try {
                const response = await fetch(`/admin/teachers/${teacherId}/toggle-status`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                const data = await response.json();
                
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert('Erreur: ' + data.message);
                }
            } catch (error) {
                alert('Erreur de connexion');
            }
        }
    </script>
{% endblock %}
