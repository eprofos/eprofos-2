security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User\Admin:
            algorithm: auto
        App\Entity\User\Student:
            algorithm: auto
        App\Entity\User\Teacher:
            algorithm: auto
        App\Entity\User\Mentor:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload admin user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\Admin
                property: email
        # used to reload student user from session
        app_student_provider:
            entity:
                class: App\Entity\User\Student
                property: email
        # used to reload teacher user from session
        app_teacher_provider:
            entity:
                class: App\Entity\User\Teacher
                property: email
        # used to reload mentor user from session
        app_mentor_provider:
            entity:
                class: App\Entity\User\Mentor
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # Admin firewall for /admin routes
        admin:
            pattern: ^/admin
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_dashboard
                always_use_default_target_path: true
                enable_csrf: true
            logout:
                path: admin_logout
                target: admin_login
                invalidate_session: true
                delete_cookies:
                    PHPSESSID: { path: /, domain: ~ }

        # Student firewall for /student routes
        student:
            pattern: ^/student
            lazy: true
            provider: app_student_provider
            form_login:
                login_path: student_login
                check_path: student_login
                default_target_path: student_dashboard
                always_use_default_target_path: true
                enable_csrf: true
            logout:
                path: student_logout
                target: student_login
                invalidate_session: true
                delete_cookies:
                    PHPSESSID: { path: /, domain: ~ }

        # Teacher firewall for /teacher routes
        teacher:
            pattern: ^/teacher
            lazy: true
            provider: app_teacher_provider
            form_login:
                login_path: teacher_login
                check_path: teacher_login
                default_target_path: teacher_dashboard
                always_use_default_target_path: true
                enable_csrf: true
            logout:
                path: teacher_logout
                target: teacher_login
                invalidate_session: true
                delete_cookies:
                    PHPSESSID: { path: /, domain: ~ }

        # Mentor firewall for /mentor routes
        mentor:
            pattern: ^/mentor
            lazy: true
            provider: app_mentor_provider
            form_login:
                login_path: mentor_login
                check_path: mentor_login
                default_target_path: mentor_dashboard
                always_use_default_target_path: true
                enable_csrf: true
                username_parameter: email
                password_parameter: password
            logout:
                path: mentor_logout
                target: mentor_login
                invalidate_session: true
                delete_cookies:
                    PHPSESSID: { path: /, domain: ~ }

        # Main firewall for public routes
        main:
            lazy: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/student/login, roles: PUBLIC_ACCESS }
        - { path: ^/student/register, roles: PUBLIC_ACCESS }
        - { path: ^/student/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/student/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/student/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/student, roles: ROLE_STUDENT }
        - { path: ^/teacher/login, roles: PUBLIC_ACCESS }
        - { path: ^/teacher/register, roles: PUBLIC_ACCESS }
        - { path: ^/teacher/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/teacher/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/teacher/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/teacher, roles: ROLE_TEACHER }
        - { path: ^/mentor/login, roles: PUBLIC_ACCESS }
        - { path: ^/mentor/register, roles: PUBLIC_ACCESS }
        - { path: ^/mentor/verify-email, roles: PUBLIC_ACCESS }
        - { path: ^/mentor/resend-verification, roles: PUBLIC_ACCESS }
        - { path: ^/mentor/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/mentor/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/mentor, roles: ROLE_MENTOR }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
        
        firewalls:
            # Test firewall to allow loginUser() in tests
            admin:
                pattern: ^/admin
                security: false
            student:
                pattern: ^/student
                security: false
            teacher:
                pattern: ^/teacher
                security: false
            mentor:
                pattern: ^/mentor
                security: false
